.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "PPI" "1" "September 2021" "ppi 1.0" ""
.hy
.SH NAME
.PP
ppi \[en] Python project initializer.
.SH SYNOPSIS
.PP
\f[B]ppi\f[R] [\f[I]\[en]i\f[R] | \f[I]\[en]\[en]git\[en]init\f[R]]
[\f[I]\[en]q\f[R] | \f[I]\[en]\[en]quiet\f[R]] <\f[I]name\f[R]>
.PD 0
.P
.PD
\f[B]ppi\f[R] [\f[I]\[en]h\f[R] | \f[I]\[en]\[en]help\f[R]]
.PD 0
.P
.PD
\f[B]ppi\f[R] [\f[I]\[en]V\f[R] | \f[I]\[en]\[en]version\f[R]]
.SH DESCRIPTION
.PP
Starting a new project can be sometimes a tedious process, as it usually
includes creating many different files.
With \f[B]ppi\f[R] it is stress-free to start a new Python project.
At bare minimum a basic set of files are created inside the new project.
These files include \f[I]README\f[R], \f[I]setup.py\f[R], and a
\f[I]directory\f[R] for the sourcecode, named with the same name as the
project itself, containing \f[I]\f[BI]init\f[I].py\f[R] and
\f[I]main.py\f[R], from which \f[I]main.py\f[R] is populated with a
basic structure, enableing the developer to start literally writing code
right away.
To make things even easier, \f[I]setup.py\f[R], during the
initialization, is also populated with a basic structure, so that the
program can be easily installed via \f[B]pip\f[R].
If a developer wants, it is possible to initialize the project as a
git-repo during the initialization, as well.
.SH OPTIONS
.TP
\f[B]\[en]q\f[R] | \f[B]\[en]\[en]quiet\f[R]
Don\[cq]t print anything to stdout.
.TP
\f[B]\[en]i\f[R] | \f[B]\[en]\[en]git\[en]init\f[R]
Initialize project as git repo.
.TP
\f[B]\[en]h\f[R] | \f[B]\[en]\[en]help\f[R]
Print this message.
.TP
\f[B]\[en]V\f[R] | \f[B]\[en]\[en]version\f[R]
Print \f[B]ppi\f[R] version.
.SH AUTHORS
Niklas Larsson.
